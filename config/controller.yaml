#@ load("@ytt:data", "data")

---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  build-init-image
  namespace: kpack
data:
  image: #@ data.values.build_init_image
---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  rebase-image
  namespace: kpack
data:
  image: #@ data.values.rebase_image
---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  lifecycle-image
  namespace: kpack
data:
  image: #@ data.values.lifecycle_image
---
apiVersion: v1
kind: ConfigMap
metadata:
  name:  completion-image
  namespace: kpack
data:
  image: #@ data.values.completion_image
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kpack-controller
  namespace: kpack
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kpack-controller
  template:
    metadata:
      labels:
        app: kpack-controller
        version: #@ data.values.version
    spec:
      serviceAccountName: controller
      containers:
      - name: controller
        image: #@ data.values.controller_image
        env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: kpack.io
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: BUILD_INIT_IMAGE
          valueFrom:
            configMapKeyRef:
              name: build-init-image
              key: image
        - name: REBASE_IMAGE
          valueFrom:
            configMapKeyRef:
              name: rebase-image
              key: image
        - name: COMPLETION_IMAGE
          valueFrom:
            configMapKeyRef:
              name: completion-image
              key: image
        - name: LIFECYCLE_IMAGE
          valueFrom:
            configMapKeyRef:
              name: lifecycle-image
              key: image
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 200Mi
