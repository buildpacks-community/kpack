/*
 * Copyright 2019 The original author or authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha2 "github.com/pivotal/kpack/pkg/client/clientset/versioned/typed/build/v1alpha2"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeKpackV1alpha2 struct {
	*testing.Fake
}

func (c *FakeKpackV1alpha2) Builds(namespace string) v1alpha2.BuildInterface {
	return &FakeBuilds{c, namespace}
}

func (c *FakeKpackV1alpha2) Builders(namespace string) v1alpha2.BuilderInterface {
	return &FakeBuilders{c, namespace}
}

func (c *FakeKpackV1alpha2) Buildpacks(namespace string) v1alpha2.BuildpackInterface {
	return &FakeBuildpacks{c, namespace}
}

func (c *FakeKpackV1alpha2) ClusterBuilders() v1alpha2.ClusterBuilderInterface {
	return &FakeClusterBuilders{c}
}

func (c *FakeKpackV1alpha2) ClusterBuildpacks() v1alpha2.ClusterBuildpackInterface {
	return &FakeClusterBuildpacks{c}
}

func (c *FakeKpackV1alpha2) ClusterStacks() v1alpha2.ClusterStackInterface {
	return &FakeClusterStacks{c}
}

func (c *FakeKpackV1alpha2) ClusterStores() v1alpha2.ClusterStoreInterface {
	return &FakeClusterStores{c}
}

func (c *FakeKpackV1alpha2) Images(namespace string) v1alpha2.ImageInterface {
	return &FakeImages{c, namespace}
}

func (c *FakeKpackV1alpha2) SourceResolvers(namespace string) v1alpha2.SourceResolverInterface {
	return &FakeSourceResolvers{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeKpackV1alpha2) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
